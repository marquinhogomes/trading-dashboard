#!/usr/bin/env python3
"""
Teste simplificado para verificar as corre√ß√µes
"""

print("=" * 50)
print("üß™ TESTE SIMPLES DE CORRE√á√ïES")
print("=" * 50)

# Teste 1: Verificar se a se√ß√£o trading est√° sendo carregada corretamente
print("\n1. Testando configura√ß√£o de trading...")
try:
    from trading_real_integration import REAL_CONFIG, HAS_REAL_CONFIG
    
    print(f"   ‚úÖ HAS_REAL_CONFIG: {HAS_REAL_CONFIG}")
    
    if HAS_REAL_CONFIG and REAL_CONFIG:
        print(f"   üìä REAL_CONFIG tem {len(REAL_CONFIG)} chaves")
        
        if 'trading' in REAL_CONFIG:
            print(f"   ‚úÖ Se√ß√£o 'trading' encontrada!")
            trading_params = list(REAL_CONFIG['trading'].keys())
            print(f"   üìã Par√¢metros trading: {trading_params}")
        else:
            print(f"   ‚ùå Se√ß√£o 'trading' AINDA n√£o encontrada")
            print(f"   üìã Chaves dispon√≠veis: {list(REAL_CONFIG.keys())}")
    else:
        print("   ‚ö†Ô∏è REAL_CONFIG n√£o dispon√≠vel")
        
except Exception as e:
    print(f"   ‚ùå Erro: {e}")

# Teste 2: Verificar importa√ß√£o da fun√ß√£o principal
print("\n2. Testando importa√ß√£o da fun√ß√£o principal...")
try:
    from calculo_entradas_v55 import calcular_residuo_zscore_timeframe
    print("   ‚úÖ Fun√ß√£o calcular_residuo_zscore_timeframe importada com sucesso")
except Exception as e:
    print(f"   ‚ùå Erro na importa√ß√£o: {e}")

# Teste 3: Verificar se warnings do TensorFlow foram suprimidos
print("\n3. Testando supress√£o de warnings do TensorFlow...")
try:
    # Deve importar sem warnings excessivos
    import warnings
    with warnings.catch_warnings():
        warnings.simplefilter("ignore")
        import tensorflow as tf
    print("   ‚úÖ TensorFlow importado sem warnings cr√≠ticos")
except Exception as e:
    print(f"   ‚ö†Ô∏è TensorFlow n√£o dispon√≠vel: {e}")

print("\n" + "=" * 50)
print("‚úÖ TESTE B√ÅSICO CONCLU√çDO")
print("=" * 50)
