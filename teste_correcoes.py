#!/usr/bin/env python3
"""
Teste das corre√ß√µes aplicadas
"""

print("üîß Testando corre√ß√µes aplicadas...")

# Teste 1: config_real
print("\n1. Testando config_real...")
try:
    from config_real import SYSTEM_INFO
    print(f"   ‚úÖ SYSTEM_INFO carregado")
    print(f"   Vers√£o: {SYSTEM_INFO['version']}")
    print(f"   Fonte: {SYSTEM_INFO['source_file']}")
    print(f"   Config Type: {SYSTEM_INFO['config_type']}")
except Exception as e:
    print(f"   ‚ùå Erro: {e}")

# Teste 2: trading_real_integration
print("\n2. Testando trading_real_integration...")
try:
    from trading_real_integration import safe_auto_init, REAL_CONFIG
    print(f"   ‚úÖ M√≥dulo importado")
    print(f"   REAL_CONFIG dispon√≠vel: {REAL_CONFIG is not None}")
    
    # Teste de inicializa√ß√£o manual
    result = safe_auto_init()
    print(f"   Inicializa√ß√£o: {'‚úÖ' if result else '‚ö†Ô∏è'}")
    
except Exception as e:
    print(f"   ‚ùå Erro: {e}")
    import traceback
    traceback.print_exc()

# Teste 3: dashboard_teste_simples
print("\n3. Testando dashboard simplificado...")
try:
    import importlib.util
    spec = importlib.util.spec_from_file_location("dashboard", "dashboard_teste_simples.py")
    if spec:
        print("   ‚úÖ Dashboard de teste dispon√≠vel")
    else:
        print("   ‚ùå Dashboard n√£o encontrado")
except Exception as e:
    print(f"   ‚ùå Erro: {e}")

print("\nüéØ Resumo das Corre√ß√µes:")
print("‚úÖ REAL_CONFIG global declaration fixed")
print("‚úÖ source_file key added to SYSTEM_INFO")  
print("‚úÖ config_type key added to SYSTEM_INFO")
print("\nüöÄ Execute: streamlit run dashboard_teste_simples.py")
